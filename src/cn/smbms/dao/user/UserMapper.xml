<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.smbms.dao.user.UserMapper">

    <!-- 查询用户表记录数 -->
    <select id="count" resultType="int">
        select count(1) as count
        from smbms_user
    </select>

    <resultMap id="userList" type="user">

        <!--<result property="id"  column="id"/>
        <result property="userCode"  column="userCode"/>
        <result property="userName"  column="userName"/>
        <result property="phone"  column="phone"/>
        <result property="birthday"  column="birthday"/>
        <result property="userRole"  column="userRole"/>-->
        <result property="userRoleName" column="roleName"/>
    </resultMap>

    <!--查询用户列表-->
    <select id="getUserList" parameterType="user" resultMap="userList">

        SELECT u.*, r.roleName
        FROM smbms_user as u
                 INNER JOIN smbms_role as r
                            ON u.userRole = r.id
        WHERE userName like concat('%', #{userName}, '%')
          and userRole = #{userRole}
    </select>
    <!--根据用户名称查询用户列表（like查询）-->
    <select id="getUserListByUserName" parameterType="String" resultType="user">
        select *
        from smbms_user
        where userName like concat('%', #{userName}, '%')
    </select>

    <!--查询用户列表-->
    <select id="getUserListByMap" parameterType="Map" resultType="user">
        select *
        from smbms_user
        where userName like concat('%', #{uName}, '%')
          and userRole = #{uRole}
    </select>


    <!--查询用户列表-->
    <insert id="add" parameterType="user">
        insert into smbms_user (userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy,
                                creationDate)
        values (#{userCode}, #{userName}, #{userPassword}, #{gender}, #{birthday}, #{phone}, #{address}, #{userRole},
                #{createdBy}, #{creationDate})

    </insert>

    <!--查询用户列表-->
    <update id="update" parameterType="user">
        update smbms_user set userCode=#{userCode},userName=#{userName},userPassword=#{userPassword},modifyBy=#{modifyBy}, modifyDate=#{modifyDate}
        where id=#{id}
    </update>

    <delete id="delete" parameterType="user">
        delete from smbms_user where id=#{id}
    </delete>

    <update id="updatePwd">
       update  smbms_user set userPassword=#{userPassword}
        where id=#{id}
    </update>
</mapper>